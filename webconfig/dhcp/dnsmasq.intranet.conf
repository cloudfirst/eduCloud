port=0
interface=eth0
# The following options make you a better netizen, since they
# tell dnsmasq to filter out queries which the public DNS cannot
# answer, and which load the servers (especially the root servers)
# uneccessarily. If you have a dial-on-demand link they also stop
# these requests from bringing up the link uneccessarily.

# Never forward plain names (without a dot or domain part)
domain-needed
# Never forward addresses in the non-routed address spaces.
bogus-priv
# filter what we send upstream
filterwin2k

# By  default,  dnsmasq  will  send queries to any of the upstream
# servers it knows about and tries to favour servers to are  known
# to  be  up.  Uncommenting this forces dnsmasq to try each query
# with  each  server  strictly  in  the  order  they   appear   in
# /etc/resolv.conf
strict-order

# By default, when dnsmasq has more than one upstream server
# available, it will send queries to just one server. Setting this
# flag forces dnsmasq to send all queries to all available servers.
# The reply from the server which answers first will be returned to
# the original requestor.
all-servers
# blocks probe-machines attack
stop-dns-rebind
rebind-localhost-ok

# If you want dnsmasq to detect attempts by Verisign to send queries
# to unregistered .com and .net hosts to its sitefinder service and
# have dnsmasq instead return the correct NXDOMAIN response, uncomment
# this line. You can add similar lines to do the same for other
# registries which have implemented wildcard A records.
# http://www.thekelleys.org.uk/dnsmasq/docs/setup.html
#bogus-nxdomain=64.94.110.11

# stops dnsmasq from getting DNS server addresses from /etc/resolv.conf
no-resolv

# == Provide DNS server addresses from this file instead
# Google Public DNS (respond time: ~36 msec constantly)
server=8.8.8.8
server=8.8.4.4
#OpenDNS Servers (respond time: ~160 msec initially, ~28 msec afterwards)
#server=208.67.222.222
#server=208.67.220.220

# Set this (and domain: see below) if you want to have a domain
# automatically added to simple names in a hosts-file.
#expand-hosts

# enable dhcp
dhcp-authoritative
dhcp-option=6,0.0.0.0
dhcp-script=/usr/bin/dhcp-lease-notification

# use /etc/ethers for static hosts; same format as --dhcp-host
# <hwaddr> [<hostname>] <ipaddr>
read-ethers

# dhcp lease (start,end,netmask,leasetime)
# supply the range of addresses available for lease and optionally
# a lease time. If you have more than one network, you will need to
# repeat this for each network on which you want to supply DHCP
# service.
#{{
dhcp-range=192.168.56.100,192.168.56.254,infinite
#}}
# Set the domain for dnsmasq. this is optional, but if it is set, it
# does the following things.
# 1) Allows DHCP hosts to have fully qualified domain names, as long
#     as the domain part matches this setting.
# 2) Sets the "domain" DHCP option thereby potentially setting the
#    domain of all systems configured by DHCP
# 3) Provides the domain part for "expand-hosts"
# domain=example.org
